// Mocks generated by Mockito 5.3.2 from annotations
// in flutter_clean_template/test/news/presentation/view/news_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:flutter_clean_template/common/base/base_service.dart' as _i4;
import 'package:flutter_clean_template/features/news/domain/entity/news.dart'
    as _i3;
import 'package:flutter_clean_template/features/news/presentation/view_model/news_view_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NewsViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockNewsViewModel extends _i1.Mock implements _i2.NewsViewModel {
  @override
  List<_i3.News> get listNews => (super.noSuchMethod(
        Invocation.getter(#listNews),
        returnValue: <_i3.News>[],
        returnValueForMissingStub: <_i3.News>[],
      ) as List<_i3.News>);
  @override
  set listNews(List<_i3.News>? list) => super.noSuchMethod(
        Invocation.setter(
          #listNews,
          list,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.ApiState get apiState => (super.noSuchMethod(
        Invocation.getter(#apiState),
        returnValue: _i4.ApiState.loading,
        returnValueForMissingStub: _i4.ApiState.loading,
      ) as _i4.ApiState);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i5.Future<void> getNews({bool? shouldRefresh = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNews,
          [],
          {#shouldRefresh: shouldRefresh},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void loadingState() => super.noSuchMethod(
        Invocation.method(
          #loadingState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void completedState() => super.noSuchMethod(
        Invocation.method(
          #completedState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void errorState({String? message}) => super.noSuchMethod(
        Invocation.method(
          #errorState,
          [],
          {#message: message},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
